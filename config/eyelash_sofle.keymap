#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hold_homerow: hold_homerow {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_HOMEROW";
        bindings = <&sk>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <28 29 30 31 34 35 36 37>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        quick-tap-ms = <100>;
        require-prior-idle-ms = <100>;
    };

    sticky_layer: sticky_layer {
        compatible = "zmk,behavior-hold-tap";
        label = "STICKY_LAYER";
        bindings = <&mo>, <&tog>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <56 61>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
    };

    sticky_layer1: sticky_layer1 {
        compatible = "zmk,behavior-hold-tap";
        label = "STICKY_LAYER1";
        bindings = <&mo>, <&tog>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    layer_key: layer_key {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_KEY";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        require-prior-idle-ms = <100>;
        tapping-term-ms = <200>;
    };

    macros {
        control_c: control_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            label = "CONTROL_C";
        };

        control_space: control_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "CONTROL_SPACE";
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(TAB)>;
            label = "ALT_TAB";
        };

        layor2: leftgui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 2>;
            label = "LEFTGUI";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE";
        };

        quit: quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(Q)>;
            label = "QUIT";
        };

        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(S)>;
            label = "SAVE";
        };

        control_a: control_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A)>;
            label = "CONTROL_A";
        };

        control_tab: control_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(TAB)>;
            label = "CONTROL_TAB";
        };
    };

    combos {
        compatible = "zmk,combos";

        save {
            bindings = <&sticky_layer 1 1>;
            key-positions = <27 56>;
        };

        layer2 {
            bindings = <&sticky_layer 2 2>;
            key-positions = <56 29>;
        };

        layer3 {
            bindings = <&sticky_layer 3 3>;
            key-positions = <56 28>;
        };

        layer4 {
            bindings = <&sticky_layer 4 4>;
            key-positions = <56 41>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <57 59>;
            timeout-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1                    &kp N2                    &kp N3                 &kp N4                 &kp N5            &kp UP_ARROW     &kp N6         &kp N7                 &kp N8                 &kp N9                     &kp N0                        &kp BACKSPACE
&kp TAB     &kp Q                     &kp W                     &kp E                  &kp R                  &kp T             &kp DOWN_ARROW   &kp Y          &kp U                  &kp I                  &kp O                      &kp P                         &kp BSLH
&kp CAPS    &hold_homerow LEFT_GUI A  &hold_homerow LEFT_ALT S  &hold_homerow LSHFT D  &hold_homerow LCTRL F  &kp G             &kp LEFT_ARROW   &kp H          &hold_homerow RCTRL J  &hold_homerow RSHFT K  &hold_homerow RIGHT_ALT L  &hold_homerow RGUI SEMICOLON  &kp APOS
&kp LSHFT   &kp Z                     &kp X                     &kp C                  &kp V                  &kp B             &kp RIGHT_ARROW  &kp N          &kp M                  &kp COMMA              &kp DOT                    &kp FSLH                      &kp ENTER
&kp C_MUTE  &kp LCTRL                 &kp LEFT_GUI              &kp LEFT_ALT           &mo 1                  &sk LEFT_SHIFT    &kp ENTER        &kp BACKSPACE  &layer_key 3 SPACE     &mo 2                  &kp RIGHT_SHIFT            &kp RIGHT_COMMAND
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1             &kp F2        &kp F3      &kp F4          &kp F5           &mmv MOVE_UP     &kp F6          &kp F7         &kp F8        &kp F9     &kp F10    &trans
&trans      &trans             &kp LEFT_GUI  &control_c  &kp BACKSPACE   &control_tab     &mmv MOVE_DOWN   &kp TAB         &kp BACKSPACE  &kp EQUAL     &kp PLUS   &trans     &trans
&trans      &sticky_layer 1 1  &mo 3         &mo 2       &control_space  &control_a       &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp ENTER  &trans
&trans      &trans             &mo 4         &copy       &paste          &save            &mmv MOVE_RIGHT  &kp COLON       &kp AMPS       &kp GRAVE     &kp TILDE  &kp F12    &trans
&kp C_MUTE  &trans             &trans        &trans      &trans          &kp BACKSPACE    &mkp LCLK        &kp BACKSLASH   &kp ENTER      &trans        &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1                     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &mmv MOVE_UP     &kp F6             &kp F7                &kp F8                 &kp F9             &kp F10      &trans
&trans     &trans        &hold_homerow LEFT_GUI NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp TAB          &mmv MOVE_DOWN   &sticky_layer 4 4  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &sticky_layer 3 3  &kp F11      &kp F12
&trans     &trans        &kp NUMBER_4                     &kp NUMBER_5  &kp NUMBER_6  &mkp RCLK        &mmv MOVE_LEFT   &kp MINUS          &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE           &trans       &trans
&trans     &trans        &kp NUMBER_7                     &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0     &mmv MOVE_RIGHT  &kp UNDER          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH      &bootloader  &trans
&trans     &trans        &trans                           &kp SPACE     &to 0         &kp BACKSPACE    &mkp LCLK        &trans             &trans                &trans                 &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans         &trans  &trans        &trans        &trans        &trans                &trans                 &trans
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT    &trans  &kp CARET     &kp AMPS      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &trans
&trans  &trans        &trans        &kp GRAVE     &kp TILDE     &kp ESCAPE     &trans  &kp ESCAPE    &trans        &trans        &trans                &trans                 &trans
&trans  &trans        &trans        &to 0         &to 0         &trans         &trans  &trans        &trans        &to 0         &trans                &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &out OUT_USB     &out OUT_BLE    &out OUT_TOG     &rgb_ug RGB_BRI  &rgb_ug RGB_BRD    &trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &sys_reset       &bt BT_CLR_ALL  &bt BT_CLR       &trans           &trans             &trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
&trans  &bootloader      &trans          &trans           &to 0            &trans             &trans  &trans  &trans        &trans        &trans        &trans
            >;
        };
    };
};
